(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{277:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"gitcommit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitcommit"}},[t._v("#")]),t._v(" gitcommit")]),t._v(" "),a("p",[t._v("观星台最近的一小部门开发任务交给了于莉，但是 git commit message 写的并不理想，于是给项目加了 commit 规范校验，以及提交规范 commit message\n的脚本命令")]),t._v(" "),a("h2",{attrs:{id:"git-的提交说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-的提交说明"}},[t._v("#")]),t._v(" Git 的提交说明")]),t._v(" "),a("p",[t._v("Git 每次提交代码的时候都需要手写提交说明，一般我们都是一句话")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"修复xxx bug"')]),t._v("\n")])])]),a("p",[t._v("一般编辑器都带有辅助的 git commit 功能，很可能都是直接写一行 message 如：")]),t._v(" "),a("p",[a("code",[t._v("修复xxx")]),t._v(" 然后就提交了。")]),t._v(" "),a("p",[t._v("其实 git 是可以书写多行信息的")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit\n")])])]),a("p",[t._v("此时会跳出一个文本编辑器，可以书写多行提交说明：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Please enter the commit message for your changes. Lines starting")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# with '#' will be ignored, and an empty message aborts the commit.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Your branch is up to date with 'origin/master'.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes to be committed:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       modified:   vue.config.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n~\n~\n~\n~\n~\n~\n~\n~\n~\n~\ne:/project/lsms/.git/COMMIT_EDITMSG "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("unix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(":34 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v("/11/2019"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("如果没有规范的提交说明，很难阐述当前代码的提交性质（修复 Bug、代码性能优化、新增功能或者发布版本等）。查看 Vue 和 angular 源码的 Git 提交说明（fix 表明修复问题、feat 表明新增功能...）")]),t._v(" "),a("p",[t._v("手写符合规范的提交说明很难避免错误，可以借助工具来实现规范的提交说明。")]),t._v(" "),a("h2",{attrs:{id:"规范的-git-提交说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范的-git-提交说明"}},[t._v("#")]),t._v(" 规范的 Git 提交说明")]),t._v(" "),a("p",[t._v("Git 提交说明可分为三个部分：Header、Body 和 Footer。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Header"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Footer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h3",{attrs:{id:"header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header"}},[t._v("#")]),t._v(" Header")]),t._v(" "),a("p",[t._v("Header 部分包括三个字段 type（必需）、scope（可选）和 subject（必需）。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("scope"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[a("code",[t._v("type")]),t._v(" 用于说明 "),a("code",[t._v("commit")]),t._v(" 的提交性质。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("值")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("feat")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("新增一个功能")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("fix")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("修复一个 Bug")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("docs")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文档变更")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("style")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("代码格式（不影响功能，例如空格、分号等格式修正）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("refactor")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("代码重构")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("perf")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("改善性能")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("test")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("测试")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("build")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("变更项目构建或外部依赖（例如 scopes: webpack、gulp、npm 等）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ci")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("更改持续集成软件的配置文件和 package 中的 scripts 命令，例如 scopes: Travis, Circle 等")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("chore")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("变更构建流程或辅助工具")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("revert")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("代码回退")])])])]),t._v(" "),a("p",[a("code",[t._v("scope")]),t._v(" 说明 "),a("code",[t._v("commit")]),t._v(" 影响的范围。"),a("code",[t._v("scope")]),t._v(" 依据项目而定，例如在业务项目中可以依据菜单或者功能模块划分，如果是组件库开发，则可以依据组件划分。")]),t._v(" "),a("p",[t._v("subject 是 commit 的简短描述。")]),t._v(" "),a("p",[a("code",[t._v("Body")]),t._v("\ncommit 的详细描述，说明代码提交的详细说明。")]),t._v(" "),a("p",[a("code",[t._v("Footer")]),t._v("\n如果代码的提交是不兼容变更或关闭缺陷，则 Footer 必需，否则可以省略。")]),t._v(" "),a("p",[t._v("不兼容变更\n当前代码与上一个版本不兼容，则 Footer 以 BREAKING CHANGE 开头，后面是对变动的描述、以及变动的理由和迁移方法。")]),t._v(" "),a("p",[t._v("关闭缺陷\n如果当前提交是针对特定的 issue，那么可以在 Footer 部分填写需要关闭的单个 issue 或一系列 issues。")]),t._v(" "),a("h2",{attrs:{id:"commitizen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitizen"}},[t._v("#")]),t._v(" Commitizen")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitizen/cz-cli"),a("OutboundLink")],1),t._v("是一个可以实现规范的提交说明的工具：\n当你使用 commitizen 来提交 git commit 消息时，命令行会提示您在提交时填写所有必需的提交字段。")]),t._v(" "),a("h3",{attrs:{id:"making-your-repo-commitizen-friendly"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#making-your-repo-commitizen-friendly"}},[t._v("#")]),t._v(" Making your repo Commitizen-friendly")]),t._v(" "),a("p",[t._v("首先 安装 Commitizen cli 工具")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" commitizen -g\n")])])]),a("p",[t._v("接下来，使用 cz-conventional-changelog 适配器来初始化您的项目")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("commitizen init cz-conventional-changelog --save-dev --save-exact\n")])])]),a("p",[t._v("如果你使用的 yarn")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("commitizen init cz-conventional-changelog --yarn --dev --exact\n")])])]),a("p",[t._v("初始化命令主要进行了 3 件事情")]),t._v(" "),a("ul",[a("li",[t._v("在项目中安装 cz-conventional-changelog 适配器依赖")]),t._v(" "),a("li",[t._v("将适配器依赖保存到 package.json 的 devDependencies 字段信息")]),t._v(" "),a("li",[t._v("在 package.json 中新增 config.commitizen 字段信息，主要用于配置 cz 工具的适配器路径")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"devDependencies"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ...\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"cz-conventional-changelog"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.0.2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"config"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commitizen"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./node_modules/cz-conventional-changelog"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然后就可以直接使用 git-cz 来代替 git message")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npx git-cz\n")])])]),a("p",[t._v("也可以使用 npm script")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("  ...\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npx git-cz"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然后命令行就可以执行：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run commit\n")])])]),a("h2",{attrs:{id:"commitlint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitlint"}},[t._v("#")]),t._v(" Commitlint")]),t._v(" "),a("p",[t._v("上面的方式虽然提供了规范的 commit 方式，但是仍然可以提交不符合规范的 commit，接下来要做的就是杜绝不符合规范的 commit\n对 commit 做校验，不符合的不让提交。")]),t._v(" "),a("p",[t._v("校验提交说明是否符合规范，安装校验工具 commitlint：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i @commitlint/cli -D\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" @commitlint/cli -D\n")])])]),a("p",[t._v("安装校验规则：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i  @commitlint/config-conventional  -D\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#or")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v("  @commitlint/config-conventional  -D\n")])])]),a("p",[t._v("安装完成之后创建 "),a("code",[t._v("commitlint.config.js")]),t._v(" 文件")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" module.exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("extends: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@commitlint/config-conventional'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" commitlint.config.js\n")])])]),a("p",[t._v("vue 项目在 package.json 中添加 commit-msg 校验，vue 项目中用的是尤大的 yorkie 作为钩子。\n我在 gitHooks 中写好像不起作用，还是按照官网写的使用 husky 作为钩子添加如下")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit-msg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -E HUSKY_GIT_PARAMS"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"test-commitlint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#test-commitlint"}},[t._v("#")]),t._v(" test commitlint")]),t._v(" "),a("p",[t._v("更改 git repo 文件然后提交 commit 测试")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"remove unuse code"')]),t._v("\nhusky "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" commit-msg "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node v10.16.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n⧗   input: remove unuse code\n✖   subject may not be empty "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("subject-empty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n✖   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" may not be empty "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("type-empty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n✖   found "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" problems, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" warnings\nⓘ   Get help: https://github.com/conventional-changelog/commitlint/"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#what-is-commitlint")]),t._v("\n\nhusky "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" commit-msg hook failed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("add --no-verify to bypass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("成功阻止了不符合规范的 commit message")]),t._v(" "),a("h2",{attrs:{id:"vscode-commitizen-support"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vscode-commitizen-support"}},[t._v("#")]),t._v(" vscode Commitizen Support")]),t._v(" "),a("p",[t._v("在 vscode 扩展市场搜索 Visual Studio Code Commitizen Support")]),t._v(" "),a("p",[t._v("安装成功后 "),a("code",[t._v("ctrl+shift+p")]),t._v(" 打开命令面板然后输入"),a("code",[t._v("conventional commit")]),t._v(" 就会有 commit 操作提示了")])])}),[],!1,null,null,null);s.default=n.exports}}]);